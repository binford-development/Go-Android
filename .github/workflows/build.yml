name: Build Go Android ARM64

on:
  workflow_dispatch:
    inputs:
      go_version:
        description: 'Go version to build (e.g. go1.22.2)'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      go_version: ${{ steps.set_version.outputs.go_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3


      - name: Set Go version variable
        id: set_version
        run: |
          if [ -z "${{ github.event.inputs.go_version }}" ]; then
            version=$(curl -s https://go.dev/VERSION?m=text)
          else
            version=${{ github.event.inputs.go_version }}
          fi
          echo "Using Go version: $version"
          echo "go_version=$version" >> $GITHUB_OUTPUT


      - name: Build Go for Android ARM64
        run: |
          set -e
          version=${{ steps.set_version.outputs.go_version }}

          sudo apt-get update
          sudo apt-get install -y curl git gcc make

          curl -LO https://go.dev/dl/${version}.src.tar.gz
          tar -xzf ${version}.src.tar.gz
          mv go go-src

          cd go-src/src

          export GOOS=android
          export GOARCH=arm64
          export CGO_ENABLED=1
          export NDK_ROOT=$ANDROID_NDK_LATEST_HOME
          export CC=$NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang

          ./make.bash

          cd ..
          echo "go version ${version} linux/amd64" > version.txt
          mv bin/go "go-${version}-android-arm64.go"
          

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: go-android-arm64-binary-${{ steps.set_version.outputs.go_version }}
          path: go-v${{ steps.set_version.outputs.go_version }}-android-arm64.go
